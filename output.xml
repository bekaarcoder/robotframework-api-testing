<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1 (Python 3.8.8 on win32)" generated="20210828 20:31:43.838" rpa="false" schemaversion="2">
<suite id="s1" name="TestCase" source="C:\Users\shash\Documents\Projects\PyCharmProjects\RobotFrameworkBasic\BookstoreAPI\TestCase.robot">
<test id="s1-t1" name="TC1:Returns all the books(GET)">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210828 20:31:44.104" level="INFO">Creating Session using : alias=mysession, url=https://demoqa.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210828 20:31:44.104" endtime="20210828 20:31:44.105"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>/BookStore/v1/Books</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210828 20:31:44.784" level="INFO">GET Request : url=https://demoqa.com/BookStore/v1/Books 
 path_url=/BookStore/v1/Books 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210828 20:31:44.785" level="INFO">GET Response : url=https://demoqa.com/BookStore/v1/Books 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.17.10 (Ubuntu)', 'Date': 'Sat, 28 Aug 2021 15:01:44 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '4514', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"11a2-8zfX++QwcgaCjSU6F8JP9fUd1tY"'} 
 body={"books":[{"isbn":"9781449325862","title":"Git Pocket Guide","subTitle":"A Working Introduction","author":"Richard E. Silverman","publish_date":"2020-06-04T08:48:39.000Z","publisher":"O'Reilly Media","pages":234,"description":"This pocket guide is the perfect on-the-job companion to Git, the distributed version control system. It provides a compact, readable introduction to Git for new users, as well as a reference to common commands and procedures for those of you with Git exp","website":"http://chimera.labs.oreilly.com/books/1230000000561/index.html"},{"isbn":"9781449331818","title":"Learning JavaScript Design Patterns","subTitle":"A JavaScript and jQuery Developer's Guide","author":"Addy Osmani","publish_date":"2020-06-04T09:11:40.000Z","publisher":"O'Reilly Media","pages":254,"description":"With Learning JavaScript Design Patterns, you'll learn how to write beautiful, structured, and maintainable JavaScript by applying classical and modern design patterns to the language. If you want to keep your code efficient, more manageable, and up-to-da","website":"http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/"},{"isbn":"9781449337711","title":"Designing Evolvable Web APIs with ASP.NET","subTitle":"Harnessing the Power of the Web","author":"Glenn Block et al.","publish_date":"2020-06-04T09:12:43.000Z","publisher":"O'Reilly Media","pages":238,"description":"Design and build Web APIs for a broad range of clients—including browsers and mobile devices—that can adapt to change over time. This practical, hands-on guide takes you through the theory and tools you need to build evolvable HTTP services with Microsoft","website":"http://chimera.labs.oreilly.com/books/1234000001708/index.html"},{"isbn":"9781449365035","title":"Speaking JavaScript","subTitle":"An In-Depth Guide for Programmers","author":"Axel Rauschmayer","publish_date":"2014-02-01T00:00:00.000Z","publisher":"O'Reilly Media","pages":460,"description":"Like it or not, JavaScript is everywhere these days-from browser to server to mobile-and now you, too, need to learn the language or dive deeper than you have. This concise book guides you into and through JavaScript, written by a veteran programmer who o","website":"http://speakingjs.com/"},{"isbn":"9781491904244","title":"You Don't Know JS","subTitle":"ES6 &amp; Beyond","author":"Kyle Simpson","publish_date":"2015-12-27T00:00:00.000Z","publisher":"O'Reilly Media","pages":278,"description":"No matter how much experience you have with JavaScript, odds are you don’t fully understand the language. As part of the \\\"You Don’t Know JS\\\" series, this compact guide focuses on new features available in ECMAScript 6 (ES6), the latest version of the st","website":"https://github.com/getify/You-Dont-Know-JS/tree/master/es6%20&amp;%20beyond"},{"isbn":"9781491950296","title":"Programming JavaScript Applications","subTitle":"Robust Web Architecture with Node, HTML5, and Modern JS Libraries","author":"Eric Elliott","publish_date":"2014-07-01T00:00:00.000Z","publisher":"O'Reilly Media","pages":254,"description":"Take advantage of JavaScript's power to build robust web-scale or enterprise applications that are easy to extend and maintain. By applying the design patterns outlined in this practical book, experienced JavaScript developers will learn how to write flex","website":"http://chimera.labs.oreilly.com/books/1234000000262/index.html"},{"isbn":"9781593275846","title":"Eloquent JavaScript, Second Edition","subTitle":"A Modern Introduction to Programming","author":"Marijn Haverbeke","publish_date":"2014-12-14T00:00:00.000Z","publisher":"No Starch Press","pages":472,"description":"JavaScript lies at the heart of almost every modern web application, from social apps to the newest browser-based games. Though simple for beginners to pick up and play with, JavaScript is a flexible, complex language that you can use to build full-scale ","website":"http://eloquentjavascript.net/"},{"isbn":"9781593277574","title":"Understanding ECMAScript 6","subTitle":"The Definitive Guide for JavaScript Developers","author":"Nicholas C. Zakas","publish_date":"2016-09-03T00:00:00.000Z","publisher":"No Starch Press","pages":352,"description":"ECMAScript 6 represents the biggest update to the core of JavaScript in the history of the language. In Understanding ECMAScript 6, expert developer Nicholas C. Zakas provides a complete guide to the object types, syntax, and other exciting changes that E","website":"https://leanpub.com/understandinges6/read"}]} 
 </msg>
<msg timestamp="20210828 20:31:44.786" level="INFO">c:\users\shash\documents\projects\pycharmprojects\robotframeworkbasic\venv\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'demoqa.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20210828 20:31:44.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210828 20:31:44.105" endtime="20210828 20:31:44.788"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:44.789" endtime="20210828 20:31:44.793"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:44.795" endtime="20210828 20:31:44.801"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20210828 20:31:44.802" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20210828 20:31:44.801" endtime="20210828 20:31:44.802"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210828 20:31:44.803" endtime="20210828 20:31:44.803"/>
</kw>
<status status="PASS" starttime="20210828 20:31:44.103" endtime="20210828 20:31:44.804"/>
</test>
<test id="s1-t2" name="TC2:Generate Bearer token">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210828 20:31:44.807" level="INFO">Creating Session using : alias=mysession, url=https://demoqa.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210828 20:31:44.806" endtime="20210828 20:31:44.807"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>userName=${username}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210828 20:31:44.808" level="INFO">${body} = {'userName': 'timbucher', 'password': 'Password@123'}</msg>
<status status="PASS" starttime="20210828 20:31:44.808" endtime="20210828 20:31:44.808"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210828 20:31:44.809" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210828 20:31:44.809" endtime="20210828 20:31:44.809"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>/Account/v1/GenerateToken</arg>
<arg>json=${body}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210828 20:31:45.516" level="INFO">POST Request : url=https://demoqa.com/Account/v1/GenerateToken 
 path_url=/Account/v1/GenerateToken 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '53'} 
 body=b'{"userName": "timbucher", "password": "Password@123"}' 
 </msg>
<msg timestamp="20210828 20:31:45.516" level="INFO">POST Response : url=https://demoqa.com/Account/v1/GenerateToken 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.17.10 (Ubuntu)', 'Date': 'Sat, 28 Aug 2021 15:01:45 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '280', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"118-Fczcu+axt9UQkuWwZY6SD5ijSdo"'} 
 body={"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InRpbWJ1Y2hlciIsInBhc3N3b3JkIjoiUGFzc3dvcmRAMTIzIiwiaWF0IjoxNjMwMTYyOTA1fQ.qNlBwCKji1xp2RkgulEnfene60RYASkvAn8TmkyWErM","expires":"2021-09-04T15:01:45.309Z","status":"Success","result":"User authorized successfully."} 
 </msg>
<msg timestamp="20210828 20:31:45.516" level="INFO">c:\users\shash\documents\projects\pycharmprojects\robotframeworkbasic\venv\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'demoqa.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20210828 20:31:45.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210828 20:31:44.809" endtime="20210828 20:31:45.518"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:45.520" endtime="20210828 20:31:45.523"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:45.524" endtime="20210828 20:31:45.525"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20210828 20:31:45.526" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20210828 20:31:45.525" endtime="20210828 20:31:45.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210828 20:31:45.526" endtime="20210828 20:31:45.527"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${token}</var>
<arg>${response.json()}</arg>
<arg>$.token</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210828 20:31:45.557" level="INFO">${token} = ['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InRpbWJ1Y2hlciIsInBhc3N3b3JkIjoiUGFzc3dvcmRAMTIzIiwiaWF0IjoxNjMwMTYyOTA1fQ.qNlBwCKji1xp2RkgulEnfene60RYASkvAn8TmkyWErM']</msg>
<status status="PASS" starttime="20210828 20:31:45.527" endtime="20210828 20:31:45.557"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:45.558" endtime="20210828 20:31:45.558"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bearer_token}</var>
<arg>Bearer ${token[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210828 20:31:45.560" level="INFO">${bearer_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InRpbWJ1Y2hlciIsInBhc3N3b3JkIjoiUGFzc3dvcmRAMTIzIiwiaWF0IjoxNjMwMTYyOTA1fQ.qNlBwCKji1xp2RkgulEnfene60RYASkvAn8TmkyWErM</msg>
<status status="PASS" starttime="20210828 20:31:45.559" endtime="20210828 20:31:45.560"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bearer_token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:45.560" endtime="20210828 20:31:45.561"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bearer}</arg>
<arg>Bearer ${token[0]}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210828 20:31:45.563" level="INFO">${bearer} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InRpbWJ1Y2hlciIsInBhc3N3b3JkIjoiUGFzc3dvcmRAMTIzIiwiaWF0IjoxNjMwMTYyOTA1fQ.qNlBwCKji1xp2RkgulEnfene60RYASkvAn8TmkyWErM</msg>
<status status="PASS" starttime="20210828 20:31:45.561" endtime="20210828 20:31:45.563"/>
</kw>
<status status="PASS" starttime="20210828 20:31:44.806" endtime="20210828 20:31:45.563"/>
</test>
<test id="s1-t3" name="TC3:Add books">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210828 20:31:45.566" level="INFO">Creating Session using : alias=mysession, url=https://demoqa.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210828 20:31:45.566" endtime="20210828 20:31:45.567"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${isbn}</var>
<arg>isbn=${isbn_to_add}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210828 20:31:45.569" level="INFO">${isbn} = {'isbn': '9781491950296'}</msg>
<status status="PASS" starttime="20210828 20:31:45.569" endtime="20210828 20:31:45.569"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${isbn_collection}</var>
<arg>${isbn}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210828 20:31:45.570" level="INFO">${isbn_collection} = [{'isbn': '9781491950296'}]</msg>
<status status="PASS" starttime="20210828 20:31:45.570" endtime="20210828 20:31:45.570"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>userId=${user_id}</arg>
<arg>collectionOfIsbns=${isbn_collection}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210828 20:31:45.571" level="INFO">${body} = {'userId': '53b3d5fc-133f-4a9e-be87-06a273ce6d57', 'collectionOfIsbns': [{'isbn': '9781491950296'}]}</msg>
<status status="PASS" starttime="20210828 20:31:45.570" endtime="20210828 20:31:45.571"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${bearer}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210828 20:31:45.572" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InRpbWJ1Y2hlciIsInBhc3N3b3JkIjoiUGFzc3dvcmRAMTIzIiwiaWF0IjoxNjMwMTYyOTA1fQ.qNlBwCKji1...</msg>
<status status="PASS" starttime="20210828 20:31:45.572" endtime="20210828 20:31:45.572"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>/BookStore/v1/Books</arg>
<arg>json=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20210828 20:31:45.573" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210828 20:31:46.230" level="INFO">POST Request : url=https://demoqa.com/BookStore/v1/Books 
 path_url=/BookStore/v1/Books 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InRpbWJ1Y2hlciIsInBhc3N3b3JkIjoiUGFzc3dvcmRAMTIzIiwiaWF0IjoxNjMwMTYyOTA1fQ.qNlBwCKji1xp2RkgulEnfene60RYASkvAn8TmkyWErM', 'Content-Length': '100'} 
 body=b'{"userId": "53b3d5fc-133f-4a9e-be87-06a273ce6d57", "collectionOfIsbns": [{"isbn": "9781491950296"}]}' 
 </msg>
<msg timestamp="20210828 20:31:46.231" level="INFO">POST Response : url=https://demoqa.com/BookStore/v1/Books 
 status=201, reason=Created 
 headers={'Server': 'nginx/1.17.10 (Ubuntu)', 'Date': 'Sat, 28 Aug 2021 15:01:46 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '36', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"24-QdbQFOPaQVN5QqIdyeYWEdWe/Hk"'} 
 body={"books":[{"isbn":"9781491950296"}]} 
 </msg>
<msg timestamp="20210828 20:31:46.231" level="INFO">c:\users\shash\documents\projects\pycharmprojects\robotframeworkbasic\venv\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'demoqa.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20210828 20:31:46.232" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210828 20:31:45.572" endtime="20210828 20:31:46.232"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:46.235" endtime="20210828 20:31:46.238"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:46.240" endtime="20210828 20:31:46.241"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20210828 20:31:46.242" level="INFO">${status_code} = 201</msg>
<status status="PASS" starttime="20210828 20:31:46.241" endtime="20210828 20:31:46.242"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>201</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210828 20:31:46.242" endtime="20210828 20:31:46.243"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${response_isbn}</var>
<arg>${response.json()}</arg>
<arg>$.books[0].isbn</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210828 20:31:46.268" level="INFO">${response_isbn} = ['9781491950296']</msg>
<status status="PASS" starttime="20210828 20:31:46.243" endtime="20210828 20:31:46.268"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_isbn[0]}</arg>
<arg>${isbn_to_add}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210828 20:31:46.269" endtime="20210828 20:31:46.270"/>
</kw>
<status status="PASS" starttime="20210828 20:31:45.565" endtime="20210828 20:31:46.271"/>
</test>
<test id="s1-t4" name="TC4:Update Book">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210828 20:31:46.274" level="INFO">Creating Session using : alias=mysession, url=https://demoqa.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210828 20:31:46.274" endtime="20210828 20:31:46.274"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>userId=${user_id}</arg>
<arg>isbn=9781449331818</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210828 20:31:46.275" level="INFO">${body} = {'userId': '53b3d5fc-133f-4a9e-be87-06a273ce6d57', 'isbn': '9781449331818'}</msg>
<status status="PASS" starttime="20210828 20:31:46.275" endtime="20210828 20:31:46.275"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${bearer}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210828 20:31:46.276" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InRpbWJ1Y2hlciIsInBhc3N3b3JkIjoiUGFzc3dvcmRAMTIzIiwiaWF0IjoxNjMwMTYyOTA1fQ.qNlBwCKji1...</msg>
<status status="PASS" starttime="20210828 20:31:46.276" endtime="20210828 20:31:46.276"/>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>/BookStore/v1/Books/${isbn_to_add}</arg>
<arg>json=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `PUT On Session` instead.</doc>
<msg timestamp="20210828 20:31:46.277" level="WARN">Keyword 'RequestsLibrary.Put Request' is deprecated. Please use `PUT On Session` instead.</msg>
<msg timestamp="20210828 20:31:46.942" level="INFO">PUT Request : url=https://demoqa.com/BookStore/v1/Books/9781491950296 
 path_url=/BookStore/v1/Books/9781491950296 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InRpbWJ1Y2hlciIsInBhc3N3b3JkIjoiUGFzc3dvcmRAMTIzIiwiaWF0IjoxNjMwMTYyOTA1fQ.qNlBwCKji1xp2RkgulEnfene60RYASkvAn8TmkyWErM', 'Content-Length': '75'} 
 body=b'{"userId": "53b3d5fc-133f-4a9e-be87-06a273ce6d57", "isbn": "9781449331818"}' 
 </msg>
<msg timestamp="20210828 20:31:46.942" level="INFO">PUT Response : url=https://demoqa.com/BookStore/v1/Books/9781491950296 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.17.10 (Ubuntu)', 'Date': 'Sat, 28 Aug 2021 15:01:46 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '666', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"29a-+qwk7pHA6jIJhq5wwzRoTY6p7Ig"'} 
 body={"userId":"53b3d5fc-133f-4a9e-be87-06a273ce6d57","username":"timbucher","books":[{"isbn":"9781449331818","title":"Learning JavaScript Design Patterns","subTitle":"A JavaScript and jQuery Developer's Guide","author":"Addy Osmani","publish_date":"2020-06-04T09:11:40.000Z","publisher":"O'Reilly Media","pages":254,"description":"With Learning JavaScript Design Patterns, you'll learn how to write beautiful, structured, and maintainable JavaScript by applying classical and modern design patterns to the language. If you want to keep your code efficient, more manageable, and up-to-da","website":"http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/"}]} 
 </msg>
<msg timestamp="20210828 20:31:46.943" level="INFO">c:\users\shash\documents\projects\pycharmprojects\robotframeworkbasic\venv\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'demoqa.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20210828 20:31:46.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210828 20:31:46.277" endtime="20210828 20:31:46.945"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:46.948" endtime="20210828 20:31:46.954"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:46.956" endtime="20210828 20:31:46.960"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20210828 20:31:46.965" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20210828 20:31:46.962" endtime="20210828 20:31:46.965"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210828 20:31:46.966" endtime="20210828 20:31:46.967"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${response_isbn}</var>
<arg>${response.json()}</arg>
<arg>$.books[0].isbn</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210828 20:31:47.001" level="INFO">${response_isbn} = ['9781449331818']</msg>
<status status="PASS" starttime="20210828 20:31:46.968" endtime="20210828 20:31:47.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${response_isbn}</arg>
<arg>9781449331818</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210828 20:31:47.002" endtime="20210828 20:31:47.002"/>
</kw>
<status status="PASS" starttime="20210828 20:31:46.273" endtime="20210828 20:31:47.003"/>
</test>
<test id="s1-t5" name="TC5:Delete book">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210828 20:31:47.006" level="INFO">Creating Session using : alias=mysession, url=https://demoqa.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210828 20:31:47.005" endtime="20210828 20:31:47.006"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>userId=${user_id}</arg>
<arg>isbn=9781449331818</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210828 20:31:47.007" level="INFO">${body} = {'userId': '53b3d5fc-133f-4a9e-be87-06a273ce6d57', 'isbn': '9781449331818'}</msg>
<status status="PASS" starttime="20210828 20:31:47.006" endtime="20210828 20:31:47.007"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${bearer}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210828 20:31:47.008" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InRpbWJ1Y2hlciIsInBhc3N3b3JkIjoiUGFzc3dvcmRAMTIzIiwiaWF0IjoxNjMwMTYyOTA1fQ.qNlBwCKji1...</msg>
<status status="PASS" starttime="20210828 20:31:47.008" endtime="20210828 20:31:47.008"/>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>/BookStore/v1/Book</arg>
<arg>json=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `DELETE On Session` instead.</doc>
<msg timestamp="20210828 20:31:47.009" level="WARN">Keyword 'RequestsLibrary.Delete Request' is deprecated. Please use `DELETE On Session` instead.</msg>
<msg timestamp="20210828 20:31:47.700" level="INFO">DELETE Request : url=https://demoqa.com/BookStore/v1/Book 
 path_url=/BookStore/v1/Book 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InRpbWJ1Y2hlciIsInBhc3N3b3JkIjoiUGFzc3dvcmRAMTIzIiwiaWF0IjoxNjMwMTYyOTA1fQ.qNlBwCKji1xp2RkgulEnfene60RYASkvAn8TmkyWErM', 'Content-Length': '75'} 
 body=b'{"userId": "53b3d5fc-133f-4a9e-be87-06a273ce6d57", "isbn": "9781449331818"}' 
 </msg>
<msg timestamp="20210828 20:31:47.700" level="INFO">DELETE Response : url=https://demoqa.com/BookStore/v1/Book 
 status=204, reason=No Content 
 headers={'Server': 'nginx/1.17.10 (Ubuntu)', 'Date': 'Sat, 28 Aug 2021 15:01:47 GMT', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"76-4PCXQBaXXEHf9O751EDFqDE5sg4"'} 
 body=None 
 </msg>
<msg timestamp="20210828 20:31:47.700" level="INFO">c:\users\shash\documents\projects\pycharmprojects\robotframeworkbasic\venv\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'demoqa.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20210828 20:31:47.702" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210828 20:31:47.008" endtime="20210828 20:31:47.702"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:47.705" endtime="20210828 20:31:47.708"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210828 20:31:47.712" endtime="20210828 20:31:47.719"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20210828 20:31:47.724" level="INFO">${status_code} = 204</msg>
<status status="PASS" starttime="20210828 20:31:47.721" endtime="20210828 20:31:47.724"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>204</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210828 20:31:47.726" endtime="20210828 20:31:47.727"/>
</kw>
<status status="PASS" starttime="20210828 20:31:47.005" endtime="20210828 20:31:47.728"/>
</test>
<status status="PASS" starttime="20210828 20:31:43.840" endtime="20210828 20:31:47.732"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="TestCase">TestCase</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210828 20:31:45.573" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210828 20:31:46.277" level="WARN">Keyword 'RequestsLibrary.Put Request' is deprecated. Please use `PUT On Session` instead.</msg>
<msg timestamp="20210828 20:31:47.009" level="WARN">Keyword 'RequestsLibrary.Delete Request' is deprecated. Please use `DELETE On Session` instead.</msg>
</errors>
</robot>
